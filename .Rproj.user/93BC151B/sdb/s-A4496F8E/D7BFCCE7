{
    "contents" : "# rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.\nmodelName <- \"m2_R2\"\n\nrequire(ggplot2)\nrequire(dplyr)\nrequire(reshape2)\n\nBuildFERE <- function( modelName, dsWide ) {  \n  emptyTheme <- ggplot2::theme_minimal() +\n    theme(axis.text = element_blank()) +\n    theme(axis.title = element_blank()) +\n    theme(panel.grid = element_blank()) +\n    theme(panel.border = element_blank()) +\n    theme(axis.ticks.length = grid::unit(0, \"cm\"))\n  \n  paletteColor <- c(\"0\"=NA, \"2\"=\"#008000\", \"3\"=\"tomato\",\"99\"=NA) #http://colrd.com/image-dna/23557/\n  paletteFill <- c(\"0\"=NA, \"1\"=\"#5cbddd\", \"3\"=\"tomato\", \"99\"=NA)\n  \n  borderCode <- c(\n    0,0,0,0,2,2,2,2,\n    0,0,0,0,2,2,2,2,\n    0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0\n  )\n  fillCode <- c(\n    1,1,1,1,1,1,1,1,\n    1,1,1,1,1,1,1,1,\n    0,0,0,0,0,0,0,0,\n    3,3,3,3,0,0,0,0,\n    3,3,3,3,0,0,0,0,\n    3,3,3,3,0,0,0,0,\n    3,3,3,3,0,0,0,0,\n    3,3,3,3,0,0,0,0,\n    3,0,0,0,0,0,0,0\n  )\n  \n  columnNamesWide <- c(\"Estimate\", \"Std.Error\", \"t.value\", \"sdRE\", \"intVarRE\", \"timecVarRE\", \"timec2VarRE\", \"timec3VarRE\", \"sigma\")\n  columnNamesWidePretty <- c(\"Estimate\", \"Std.Error\", \"t.value\", \"SD\", \"tau0\", \"tau1\", \"tau2\", \"tau3\", \"sigma\")\n  columnNamesWideWithCoefficient <- c(\"Coefficient\", columnNamesWide)\n  dsWide2 <- dsWide[, columnNamesWideWithCoefficient]\n  \n  # I will enforce this order, it's important\n  target <- c(\"(Intercept)\", \"timec\", \"timec2\", \"timec3\", \"cohort\", \"timec:cohort\", \"timec2:cohort\", \"timec3:cohort\")\n  dsWide2<-dsWide2[match(target, dsWide2$Coefficient), ]\n  \n  dsWide2[-1,\"sigma\"]<- NA # remove unnecessary values from sigma\n  \n  ds <- melt(dsWide2, id.vars=(\"Coefficient\"), value.name=\"value\") \n  ds$label <- sprintf(\"% .2f\", ds$value) #format(x=round(ds$value,2), trim=FALSE)\n  ds$label[is.na(ds$value)] <- \"\"\n  \n  uniqueCoefficientCount <- 8\n  uniqueVariableCount <- length(unique(ds$variable))\n  ds$row <- rep(x=seq_len(uniqueCoefficientCount), times=uniqueVariableCount)\n  ds$col <- rep(x=seq_len(uniqueVariableCount), each=uniqueCoefficientCount)\n  \n  dsHeaderColumn <- data.frame(label=columnNamesWidePretty, row=0, col=seq_len(uniqueVariableCount))\n  dsHeaderRow <- data.frame(label=target, row=seq_along(target), col=0)\n  \n  ds <- plyr::rbind.fill(ds, dsHeaderColumn)\n  ds <- plyr::rbind.fill(ds, dsHeaderRow)\n  \n  ds$borderCode <- factor(ifelse(!is.na(ds$value), borderCode, 99))\n  ds$fillCode <- factor(ifelse(!is.na(ds$value), fillCode, 99))\n  \n  \n  g <- ggplot(ds, aes(x=col,y=-row, label=label)) +\n    geom_tile(aes(color=borderCode, fill=fillCode), size=1.2) +\n    geom_text(na.rm=T, color=\"black\", hjust=.5, vjust=.5, size=5, family=\"mono\") +\n    scale_color_manual(values=paletteColor) +\n    scale_fill_manual(values=paletteFill) +\n    emptyTheme +\n    theme(legend.position=\"none\") +\n    labs(x=NULL, y=NULL)\n  \n  # ggsave(filename=\"./Models/LCM/graphs/equationTiles.png\", plot=g)\n  return( g )\n}\n\n# BuildFERE(\"m2_R2\",lst_ds[\"m2_R2\"][[1]] )",
    "created" : 1417122439248.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4018016497",
    "id" : "D7BFCCE7",
    "lastKnownWriteTime" : 1417123596,
    "path" : "~/GitHub/COAG-colloquium-2014F/Reports/LCMsequence/graph-FERE.R",
    "project_path" : "Reports/LCMsequence/graph-FERE.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}